# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
# include: package:flutter_lints/flutter.yaml

include: package:dart_code_metrics/analysis_options.yaml

analyzer:
  exclude:
    - "**/*.g.dart"
    - "**/*.freezed.dart"
  errors:
    invalid_annotation_target: ignore

dart_code_metrics:
  metrics:
    cyclomatic-complexity: 20
    maximum-lines-of-code: 100
    number-of-parameters: 4
    number-of-methods: 10
  rules:
    - no-boolean-literal-compare
    - no-empty-block
    - prefer-trailing-comma
    - avoid-dynamic-calls
    - avoid-nested-conditional-expressions
    - avoid-relative-imports
    - avoid-unnecessary-type-assertions
    - avoid-unnecessary-type-casts
    - avoid-unrelated-type-assertions
    - avoid-unused-parameters
    - avoid-collection-methods-with-unrelated-types
    - avoid-substring
    - avoid-throw-in-catch-block
    - avoid-type-to-string
    - avoid-unnecessary-type-arguments
    - avoid-unnecessary-type-parameters
    - avoid-unused-code
    - avoid-non-null-assertion
    - avoid-nullable-boolean-parameters
    - avoid-nullable-parameters
    - avoid-returning-null-for-future
    - avoid-returning-null-for-void
    - avoid-returning-null
    - avoid-returning-widgets

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at https://dart.dev/lints.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    # avoid_print: false  # Uncomment to disable the `avoid_print` rule
    # prefer_single_quotes: true  # Uncomment to enable the `prefer_single_quotes` rule

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
